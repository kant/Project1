#Follow along with the WestGrid short read mapping tutorial to align reads and visualize peaks 
#uses BWA, SAMtools, and MACS2

#Let's run our .fastq files through a genome aligner 
#this will convert the .fastq to either a BAM or SAM file 
    #SAM you can read, BAM is binary format
#Compute Canada already has ref genomes

#Westgrid.sh

#!/bin/bash
#SBATCH --account=def-akelling
#SBATCH --time=02:00:00
#SBATCH --job-name=test.qc
#SBATCH --output=%x-%j.out

module load qt/5.12.8
module load nixpkgs/16.09
module load gcccore/.7.3.0
module load icc/.2018.3.222 ifort/.2018.3.222
module load gcc/7.3.0 intel/2016.4 intel/2017.1 intel/2018.3 intel/2019.3
module load bwa/0.7.17 samtools/1.12
MACS2=$HOME/.local/bin/macs2

#################################
#!/bin/bash
#SBATCH --account=def-akelling
#SBATCH --mem-per-cpu=1.5G      # increase as needed
#SBATCH --time=1:00:00

module load StdEnv/2020
module load python/3.9.6
virtualenv --no-download banana
source banana/bin/activate
pip install --no-index --upgrade pip

pip install macs2 --user
module load StdEnv/2020

module load scipy-stack/2021a

module load nixpkgs/16.09  gcc/5.4.0
module load nixpkgs/16.09  gcc/7.3.0
module load nixpkgs/16.09  intel/2016.4
module load nixpkgs/16.09  intel/2017.1
module load nixpkgs/16.09  intel/2018.3

module load bwa/0.7.17 
module load StdEnv/2020 samtools/1.12
MACS2=$HOME/.local/bin/macs2

#Let's make the ref genome files a variable so you can build your script around that 
GENOME="/cvmfs/ref.mugqic/genomes/species/Homo_sapiens.hg19/genome/Homo_sapiens.hg19.fa"
INDEX="/cvmfs/ref.mugqic/genomes/species/Homo_sapiens.hg19/genome/bwa_index/Homo_sapiens.hg19.fa"

#Make some variables for your script
ID="Westgrid"
WORKDIR=/home/akelling/projects/def-juniacke/akelling/Data1/2I7I3XE/KEL17000.20210603/210602_A00481_0206_AHFM2CDRXY/Westgrid/$ID
PLATFORM="Illumina"
SAMPLE="westtest"
THREADS=16
mkdir $WORKDIR
cd $WORKDIR

#More variables: now for files names for files we don't have yet 
FASTQ_R1=$WORKDIR/$SAMPLE.R1.fastq.gz
FASTQ_R2=$WORKDIR/$SAMPLE.R2.fastq.gz
SAM_FILE=$WORKDIR/$SAMPLE.sam
BAM_FILE=$WORKDIR/$SAMPLE.bam
MACS2_DIR=$WORKDIR/MACS2
PEAKS_FILE=$MACS2_DIR/${SAMPLE}_peaks.narrowPeak

#copy the first R1 and R2 files so they are the variable that can match the program
mv $WORKDIR/westtest.R1.fastq.gz $FASTQ_R1
mv $WORKDIR/westtest.R2.fastq.gz $FASTQ_R2

#1st command: map the reads to the genome using BWA
#This if/fi loop only does what's in the block if the files do not already exist - that way if you have to run this again, it will just skip this part if it completed last time
if [ ! -f $SAM_FILE ]; then
    #bwa mem is the command to run bwa. it needs: [options] <ref index> <1.fq> [2.fq] 
    #the -t option is for the cores/threads that we told it to use earlier
    bwa mem -t $THREADS -M \
    -R "@RG\tID:$ID\tSM:$SAMPLE\tPL:$PLATFORM" \
    $INDEX $FASTQ_R1 $FASTQ_R2 > $SAM_FILE
fi

#2nd: convert SAM to sorted BAM for downstream programs 
if [ ! -f $BAM_FILE ]; then
    samtools view -Shu --threads `expr $THREADS - 1` $SAM_FILE | \
    samtools sort --threads `expr $THREADS -1` -o $BAM_FILE -
    samtools index $BAM_FILE
fi

#3rd: call peaks in MACS2
if [ ! -f $PEAKS_FILE ]; then
    $MACS2 callpeak -t $BAM_FILE \
    -n $SAMPLE \
    -p 0.00001 \
    --outdir $MACS2_DIR \
    -B --SPMR
fi

#########################
#He visualized MACS2 files by linking his compute canada to his local cmpt so you can have a GUI 

#you made the dir "Portal" on your local to enable this
#instal osx fuse (did that 29Jul21) 

#on your local terminal in the home directory, use this link:

#sshfs akelling@cedar.computecanada.ca:/home/akelling/projects/def-juniacke/akelling/Data1/2I7I3XE/KEL17000.20210603/210602_A00481_0206_AHFM2CDRXY/18Sept21 ./Portal/
#now when you "cd portal" you should see the compute canada links you provided 
#and now you can open the app IGV (downloaded local applications)
    #and you should see "OSFUSE" as an option on your local so you can see and open your files 
#if mount error occurs, you have to "umount" the connection to unmount it and then redo the above command 

########
#This will give you all the nec files, but this does not complete MACS2 with a control file
#you need to make new variables and loops for the control one
#OR you can take the output of this script and just run the desired files in the MACS2 loop 
#add a "-c" then your control BAM file after the -t line
########